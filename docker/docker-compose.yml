version: '3.7'

services:
  ######################### POSTGRES #########################
  postgres:
    image: postgres
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - webapi_network
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "8090:80"
    networks:
      - webapi_network
    restart: unless-stopped
    depends_on:
      - postgres
  ######################### REDIS #########################
  redis:
    image: redis:latest
    container_name: redis_container
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    volumes:
      - ./redis/redis.conf:/etc/redis/redis.conf
      - redis:/etc/redis
    ports:
      - "6379:6379"
    networks:
      - webapi_network
    restart: unless-stopped

  ######################### API #########################
  api:
    build: ../src/
    image: booking-api:latest
    container_name: booking-api
    environment:
      - PORT=9000
      - DB_HOST=postgres_container
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - REDIS_HOST=redis_container
      - REDIS_PORT=6379
    ports:
      - 9000:5000
    networks:
      - webapi_network
    volumes:
      - logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  ######################### PYTHON #########################
  python-service:
    build: ../python-service/
    image: python-service:latest
    container_name: python-service
    ports:
      - "5001:5001"
    networks:
      - webapi_network
    restart: unless-stopped
######################### VOLUME AND NETWORKS #########################
volumes:
  postgres:
  pgadmin:
  redis:
  logs:

networks:
  webapi_network:
    driver: bridge
